// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  standardHoursDayOfWeek,
  standardHoursDayOfWeekRequest,
  standardHoursDayOfWeekResponse,
} from './standard-hours-day-of-week';

/**
 * The shape of the model inside the application code - what the users use
 */
export const operatingHoursStandardHours: any = z.lazy(() => {
  return z.object({
    hoursType: z.string().min(2).max(2),
    dayOfWeek: z.array(standardHoursDayOfWeek),
  });
});

/**
 * 
 * @typedef  {OperatingHoursStandardHours} operatingHoursStandardHours   
 * @property {string} - Hours Type. 

Valid values: 
10-Regular Operating Hours 
11-Will Call Hours
12-Same Day Will Call Hours
14-Customer PickUp
50-Drop Off Hours 
51-Prep Hours
 * @property {StandardHoursDayOfWeek[]} - Container for the Day of Week.

**NOTE:** For versions >= v2, this element will always be returned as an array. For requests using version = v1, this element will be returned as an array if there is more than one object and a single object if there is only 1.

 */
export type OperatingHoursStandardHours = z.infer<typeof operatingHoursStandardHours>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const operatingHoursStandardHoursResponse: any = z.lazy(() => {
  return z
    .object({
      HoursType: z.string().min(2).max(2),
      DayOfWeek: z.array(standardHoursDayOfWeekResponse),
    })
    .transform((data) => ({
      hoursType: data['HoursType'],
      dayOfWeek: data['DayOfWeek'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const operatingHoursStandardHoursRequest: any = z.lazy(() => {
  return z
    .object({ hoursType: z.string().nullish(), dayOfWeek: z.array(standardHoursDayOfWeekRequest).nullish() })
    .transform((data) => ({
      HoursType: data['hoursType'],
      DayOfWeek: data['dayOfWeek'],
    }));
});
