// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  pickUpPickUpDetails,
  pickUpPickUpDetailsRequest,
  pickUpPickUpDetailsResponse,
} from './pick-up-pick-up-details';

/**
 * The shape of the model inside the application code - what the users use
 */
export const transportationPickUpSchedulePickUp: any = z.lazy(() => {
  return z.object({
    dayOfWeek: z.string().min(1).max(1),
    pickUpDetails: pickUpPickUpDetails,
  });
});

/**
 * 
 * @typedef  {TransportationPickUpSchedulePickUp} transportationPickUpSchedulePickUp   
 * @property {string} - Day of week.
- 1 - Sunday
- 2 - Monday
- 3 - Tuesday
- 4 - Wednesday
- 5 - Thursday
- 6 - Friday
- 7 - Saturday.

 * @property {PickUpPickUpDetails} - PickUpDetails container contains either pickup time or NoPickupIndicator. Either PickUpTime or NoPickupIndicator
 */
export type TransportationPickUpSchedulePickUp = z.infer<typeof transportationPickUpSchedulePickUp>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const transportationPickUpSchedulePickUpResponse: any = z.lazy(() => {
  return z
    .object({
      DayOfWeek: z.string().min(1).max(1),
      PickUpDetails: pickUpPickUpDetailsResponse,
    })
    .transform((data) => ({
      dayOfWeek: data['DayOfWeek'],
      pickUpDetails: data['PickUpDetails'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const transportationPickUpSchedulePickUpRequest: any = z.lazy(() => {
  return z
    .object({ dayOfWeek: z.string().nullish(), pickUpDetails: pickUpPickUpDetailsRequest.nullish() })
    .transform((data) => ({
      DayOfWeek: data['dayOfWeek'],
      PickUpDetails: data['pickUpDetails'],
    }));
});
