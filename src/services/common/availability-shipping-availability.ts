// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  shippingAvailabilityUnavailableReason,
  shippingAvailabilityUnavailableReasonRequest,
  shippingAvailabilityUnavailableReasonResponse,
} from './shipping-availability-unavailable-reason';

/**
 * The shape of the model inside the application code - what the users use
 */
export const availabilityShippingAvailability = z.object({
  availableIndicator: z.string().optional(),
  unavailableReason: shippingAvailabilityUnavailableReason.optional(),
});

/**
 * Holds status of shipping availability.
 * @typedef  {AvailabilityShippingAvailability} availabilityShippingAvailability - Holds status of shipping availability. - Holds status of shipping availability.
 * @property {string} - Presence or absence indicator. Presence means the location is available for shipping.
 * @property {ShippingAvailabilityUnavailableReason} - Container to hold shipping unavailable reason.
 */
export type AvailabilityShippingAvailability = z.infer<typeof availabilityShippingAvailability>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const availabilityShippingAvailabilityResponse = z
  .object({
    AvailableIndicator: z.string().optional(),
    UnavailableReason: shippingAvailabilityUnavailableReasonResponse.optional(),
  })
  .transform((data) => ({
    availableIndicator: data['AvailableIndicator'],
    unavailableReason: data['UnavailableReason'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const availabilityShippingAvailabilityRequest = z
  .object({
    availableIndicator: z.string().nullish(),
    unavailableReason: shippingAvailabilityUnavailableReasonRequest.nullish(),
  })
  .transform((data) => ({
    AvailableIndicator: data['availableIndicator'],
    UnavailableReason: data['unavailableReason'],
  }));
