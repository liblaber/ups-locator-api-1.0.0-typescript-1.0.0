// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';

/**
 * The shape of the model inside the application code - what the users use
 */
export const includeCriteriaSearchFilter = z.object({
  dcrIndicator: z.string().optional(),
  shippingAvailabilityIndicator: z.string().optional(),
  shipperPreparationDelay: z.string().min(1).max(1).optional(),
  clickAndCollectSortWithDistance: z.string().max(3).optional(),
});

/**
 * Container to hold one or more search criteria for UPS Access Points that allow DCR, Shipping and ClickAndCollect access. Only applicable when the UPS access point candidate list is obtained in search by address or geocode search.
 * @typedef  {IncludeCriteriaSearchFilter} includeCriteriaSearchFilter - Container to hold one or more search criteria for UPS Access Points that allow DCR, Shipping and ClickAndCollect access. Only applicable when the UPS access point candidate list is obtained in search by address or geocode search. - Container to hold one or more search criteria for UPS Access Points that allow DCR, Shipping and ClickAndCollect access. Only applicable when the UPS access point candidate list is obtained in search by address or geocode search.
 * @property {string} - DCR/DCO Availability indicator for UPS Access Point. Either this indicator is present or not present. Presence indicates a search for access points with DCR. Any data in the element is ignored.
 * @property {string} - Shipping Availability indicator for UPS Access Point. Either this indicator is present or not present. Presence indicates a search of access points with shipping availability. Any data in it is ignored.
 * @property {string} - Value for the number of days to check for shipping availability from the current day. When this value is present, ShippingAvailabilityIndicator is implied implicitly.
 * @property {string} - This contains the distance (in given UnitOfMeasurement) wherin to sort the click and collect access point locations above other access point locations when a UPS Access Point candidate list is obtained in search by address or geocode search.
 */
export type IncludeCriteriaSearchFilter = z.infer<typeof includeCriteriaSearchFilter>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const includeCriteriaSearchFilterResponse = z
  .object({
    DCRIndicator: z.string().optional(),
    ShippingAvailabilityIndicator: z.string().optional(),
    ShipperPreparationDelay: z.string().min(1).max(1).optional(),
    ClickAndCollectSortWithDistance: z.string().max(3).optional(),
  })
  .transform((data) => ({
    dcrIndicator: data['DCRIndicator'],
    shippingAvailabilityIndicator: data['ShippingAvailabilityIndicator'],
    shipperPreparationDelay: data['ShipperPreparationDelay'],
    clickAndCollectSortWithDistance: data['ClickAndCollectSortWithDistance'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const includeCriteriaSearchFilterRequest = z
  .object({
    dcrIndicator: z.string().nullish(),
    shippingAvailabilityIndicator: z.string().nullish(),
    shipperPreparationDelay: z.string().nullish(),
    clickAndCollectSortWithDistance: z.string().nullish(),
  })
  .transform((data) => ({
    DCRIndicator: data['dcrIndicator'],
    ShippingAvailabilityIndicator: data['shippingAvailabilityIndicator'],
    ShipperPreparationDelay: data['shipperPreparationDelay'],
    ClickAndCollectSortWithDistance: data['clickAndCollectSortWithDistance'],
  }));
