// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';

/**
 * The shape of the model inside the application code - what the users use
 */
export const dropLocationSortCode: any = z.lazy(() => {
  return z.object({
    hubSortCode: z.string().min(2).max(2).optional(),
    freightSortFacilityCode: z.string().min(3).max(3).optional(),
  });
});

/**
 * This container is only for Freight Will call Search.
 * @typedef  {DropLocationSortCode} dropLocationSortCode - This container is only for Freight Will call Search. - This container is only for Freight Will call Search.
 * @property {string} - Holds the value of the hub sort code or airport code
 * @property {string} - Holds the value of the facility location code.
 */
export type DropLocationSortCode = z.infer<typeof dropLocationSortCode>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const dropLocationSortCodeResponse: any = z.lazy(() => {
  return z
    .object({
      HubSortCode: z.string().min(2).max(2).optional(),
      FreightSortFacilityCode: z.string().min(3).max(3).optional(),
    })
    .transform((data) => ({
      hubSortCode: data['HubSortCode'],
      freightSortFacilityCode: data['FreightSortFacilityCode'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const dropLocationSortCodeRequest: any = z.lazy(() => {
  return z
    .object({ hubSortCode: z.string().nullish(), freightSortFacilityCode: z.string().nullish() })
    .transform((data) => ({
      HubSortCode: data['hubSortCode'],
      FreightSortFacilityCode: data['freightSortFacilityCode'],
    }));
});
