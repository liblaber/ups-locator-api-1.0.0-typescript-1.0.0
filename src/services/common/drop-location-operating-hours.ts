// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  operatingHoursStandardHours,
  operatingHoursStandardHoursRequest,
  operatingHoursStandardHoursResponse,
} from './operating-hours-standard-hours';

/**
 * The shape of the model inside the application code - what the users use
 */
export const dropLocationOperatingHours = z.object({
  standardHours: z.array(operatingHoursStandardHours).optional(),
});

/**
 * Operating Hours.
 * @typedef  {DropLocationOperatingHours} dropLocationOperatingHours - Operating Hours. - Operating Hours.
 * @property {OperatingHoursStandardHours[]} - StandardHours Container.

**NOTE:** For versions >= v2, this element will always be returned as an array. For requests using version = v1, this element will be returned as an array if there is more than one object and a single object if there is only 1.

 */
export type DropLocationOperatingHours = z.infer<typeof dropLocationOperatingHours>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const dropLocationOperatingHoursResponse = z
  .object({
    StandardHours: z.array(operatingHoursStandardHoursResponse).optional(),
  })
  .transform((data) => ({
    standardHours: data['StandardHours'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const dropLocationOperatingHoursRequest = z
  .object({ standardHours: z.array(operatingHoursStandardHoursRequest).nullish() })
  .transform((data) => ({
    StandardHours: data['standardHours'],
  }));
