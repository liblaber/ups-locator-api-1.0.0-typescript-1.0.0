// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import { locatorRequest, locatorRequestRequest, locatorRequestResponse } from './locator-request';

/**
 * The shape of the model inside the application code - what the users use
 */
export const locatorRequestWrapper = z.object({
  locatorRequest: locatorRequest,
});

/**
 * N/A
 * @typedef  {LocatorRequestWrapper} locatorRequestWrapper - N/A   - N/A
 * @property {LocatorRequest} - N/A
 */
export type LocatorRequestWrapper = z.infer<typeof locatorRequestWrapper>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const locatorRequestWrapperResponse = z
  .object({
    LocatorRequest: locatorRequestResponse,
  })
  .transform((data) => ({
    locatorRequest: data['LocatorRequest'],
  }));

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const locatorRequestWrapperRequest = z
  .object({ locatorRequest: locatorRequestRequest.nullish() })
  .transform((data) => ({
    LocatorRequest: data['locatorRequest'],
  }));
