// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';

/**
 * The shape of the model inside the application code - what the users use
 */
export const pickUpPickUpDetails: any = z.lazy(() => {
  return z.object({
    pickUpTime: z.string().min(4).max(4).optional(),
    noPickUpIndicator: z.string(),
  });
});

/**
 * PickUpDetails container contains either pickup time or NoPickupIndicator. Either PickUpTime or NoPickupIndicator
 * @typedef  {PickUpPickUpDetails} pickUpPickUpDetails - PickUpDetails container contains either pickup time or NoPickupIndicator. Either PickUpTime or NoPickupIndicator - PickUpDetails container contains either pickup time or NoPickupIndicator. Either PickUpTime or NoPickupIndicator
 * @property {string} - Pickup time of transportation service for a location in military format (HHMM) e.g. 0930, 1700, 1845 etc. with exception for midnight. For midnight the time will be returned as 0.
 * @property {string} - Presence or Absence Indicator. If present, Indicates that there is no pickup time for the day.
 */
export type PickUpPickUpDetails = z.infer<typeof pickUpPickUpDetails>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const pickUpPickUpDetailsResponse: any = z.lazy(() => {
  return z
    .object({
      PickUpTime: z.string().min(4).max(4).optional(),
      NoPickUpIndicator: z.string(),
    })
    .transform((data) => ({
      pickUpTime: data['PickUpTime'],
      noPickUpIndicator: data['NoPickUpIndicator'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const pickUpPickUpDetailsRequest: any = z.lazy(() => {
  return z.object({ pickUpTime: z.string().nullish(), noPickUpIndicator: z.string().nullish() }).transform((data) => ({
    PickUpTime: data['pickUpTime'],
    NoPickUpIndicator: data['noPickUpIndicator'],
  }));
});
